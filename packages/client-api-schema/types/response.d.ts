/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A State Channel JSON RPC 2.0 response
 */
export type Response1 =
  | {
      jsonrpc: '2.0';
      id: string | number;
      result?:
        | {
            participants: Participants;
            allocations: Allocations;
            appDefinition: AppDefinition;
            appData: AppData;
            status: string;
            turnNum: number;
            [k: string]: any;
          }
        | {
            participants: Participants1;
            allocations: Allocations1;
            appDefinition: AppDefinition1;
            appData: AppData1;
            status: string;
            turnNum: number;
            [k: string]: any;
          }
        | {
            success: {
              [k: string]: any;
            };
            [k: string]: any;
          }
        | string
        | {
            status: string;
            funding?: {
              [k: string]: any;
            }[];
            participants: Participants2;
            allocations: Allocations2;
            appData: AppData2;
            turnNum: number;
            channelId: string;
            [k: string]: any;
          };
      [k: string]: any;
    }
  | Response[];
export type ParticipantId = string;
export type SigningAddress = string;
export type Destination = string;
export type Participants = Participant[];
export type Token = string;
export type Destination1 = string;
export type Amount = string;
export type AllocationItems = AllocationItem[];
export type Allocations = Allocation[];
export type AppDefinition = string;
export type AppData = string;
export type Participants1 = Participant[];
export type Allocations1 = Allocation[];
export type AppDefinition1 = string;
export type AppData1 = string;
export type Participants2 = Participant[];
export type Allocations2 = Allocation[];
export type AppData2 = string;

export interface Participant {
  participantId: ParticipantId;
  signingAddress: SigningAddress;
  destination: Destination;
  [k: string]: any;
}
export interface Allocation {
  token: Token;
  allocationItems: AllocationItems;
  [k: string]: any;
}
export interface AllocationItem {
  destination: Destination1;
  amount: Amount;
  [k: string]: any;
}
export interface Response {
  jsonrpc: '2.0';
  id: string | number;
  result?:
    | {
        participants: Participants;
        allocations: Allocations;
        appDefinition: AppDefinition;
        appData: AppData;
        status: string;
        turnNum: number;
        [k: string]: any;
      }
    | {
        participants: Participants1;
        allocations: Allocations1;
        appDefinition: AppDefinition1;
        appData: AppData1;
        status: string;
        turnNum: number;
        [k: string]: any;
      }
    | {
        success: {
          [k: string]: any;
        };
        [k: string]: any;
      }
    | string
    | {
        status: string;
        funding?: {
          [k: string]: any;
        }[];
        participants: Participants2;
        allocations: Allocations2;
        appData: AppData2;
        turnNum: number;
        channelId: string;
        [k: string]: any;
      };
  [k: string]: any;
}
