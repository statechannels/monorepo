version: 2.1

orbs:
  slack: circleci/slack@3.4.1
  puppeteer: threetreeslight/puppeteer@0.1.2

defaults: &defaults
  working_directory: /home/circleci/project
  resource_class: medium
  docker:
    - image: counterfactual/statechannels:0.5.13 # Fast contract compilation with solc installed
      environment:
        USE_NATIVE_SOLC: true
    - image: circleci/postgres:12.0-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: hub_wallet_test
        POSTGRES_PASSWORD: ''
        NODE_ENV: test

save_dep: &save_dep
  save_cache:
    key: v1-dependency-cache-{{ checksum "yarn.lock" }}
    paths:
      - node_modules
restore_dep: &restore_dep
  restore_cache:
    key: v1-dependency-cache-{{ checksum "yarn.lock" }}

save_lib: &save_lib
  save_cache:
    # Force a new cache on each build
    key: v1-lib-cache-{{ epoch }}
    paths:
      - packages/nitro-protocol/lib
      - packages/rps/lib
      - packages/client-api-schema/lib
      - packages/e2e-tests/lib
      - packages/web3torrent/lib
      - packages/embedded-wallet/lib
      - packages/devtools/lib
      - packages/wallet/lib
      - packages/jest-gas-reporter/lib
      - packages/channel-provider/lib
      - packages/channel-client/lib
      - packages/hub/lib
      - packages/wallet-specs/lib
restore_lib: &restore_lib
  restore_cache:
    # Restore from the most recently cached version of lib, using a partial key match
    key: v1-lib-cache-

commands:
  log_stats:
    description: 'Log stats '
    parameters:
      file:
        type: string
        default: stats
    steps:
      - run:
          command: bash bin/log_memory.sh <<parameters.file>>
          background: true

  upload_logs:
    description: 'Upload logs '
    parameters:
      file:
        type: string
        default: memory-usage.txt
    steps:
      - store_artifacts:
          path: /home/circleci/<< parameters.file >>.txt
          destination: << parameters.file >>

  upload_gas_report:
    description: 'Upload gas report '
    parameters:
      package:
        type: string
    steps:
      - store_artifacts:
          path: /home/circleci/project/packages/<< parameters.package >>/gas.json
          destination: << parameters.package >>-gas.json
      - store_artifacts:
          path: /home/circleci/project/packages/<< parameters.package >>/gas.md
          destination: << parameters.package >>-gas.md

  notify_slack:
    description: 'Notify slack '
    steps:
      - slack/status:
          failure_message: 'A $CIRCLE_JOB job has failed on master!'
          fail_only: true
          mentions: 'SRHGGRGS0' # Group ID for ActiveDevs
          only_for_branches: 'master'

jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - log_stats:
          file: prepare-stats
      - <<: *restore_dep
      - <<: *restore_lib
      - run: yarn --frozen-lockfile
      - <<: *save_dep
      - <<: *save_lib

      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - packages/*/dist
            - packages/*/build
            - packages/*/lib
            - packages/*/node_modules
            - packages/client-api-schema/types
            - node_modules
      - upload_logs:
          file: prepare-stats
      - notify_slack

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run: yarn lint:check
      - run: yarn build:ci
      - notify_slack

  test:
    <<: *defaults
    steps:
      - checkout
      - log_stats:
          file: test-stats
      - attach_workspace:
          at: /home/circleci/project
      - run:
          command: yarn test:ci
          no_output_timeout: 30m
      - upload_logs:
          file: test-stats
      - notify_slack
      - upload_gas_report:
          package: rps
      - upload_gas_report:
          package: nitro-protocol

  integration-test:
    resource_class: medium
    working_directory: /home/circleci/project
    docker:
      - image: circleci/node:10.16.3
    environment:
      USE_VIRTUAL_FUNDING: 'FALSE'
      USE_GANACHE_DEPLOYMENT_CACHE: true
      GANACHE_CACHE_FOLDER: ../../.ganache-deployments
      GANACHE_PORT: 8547
    steps:
      - checkout:
          path: /home/circleci/project
      - puppeteer/install
      - log_stats:
          file: integration-test-stats
      - attach_workspace:
          at: /home/circleci/project
      - run:
          command: (cd packages/devtools && yarn run start:shared-ganache)
          background: true
      - run:
          command: (cd packages/wallet && yarn run wait-on ../../.ganache-deployments && yarn run start:integration)
          background: true
      - run:
          command: (cd packages/rps && yarn run wait-on ../../.ganache-deployments && yarn run start)
          background: true
      - run: (cd packages/wallet && yarn run test:ci:integration)
      - run: (cd packages/e2e-tests && yarn test)
      - upload_logs:
          file: integration-test-stats
      - notify_slack

  integration-test-with-hub:
    resource_class: medium
    working_directory: /home/circleci/project
    docker:
      - image: circleci/node:10.16.3
      - image: circleci/postgres:12.0-alpine
        environment:
          POSTGRES_USER: root
          # Note that the DB is hub_wallet_${NODE_ENV} and we use development for this job
          POSTGRES_DB: hub_wallet_development
          POSTGRES_PASSWORD: ''
          NODE_ENV: test
    environment:
      USE_VIRTUAL_FUNDING: 'TRUE'
      HUB_DB_NAME: hub_wallet_development
      # The development environment mimics integration environment
      NODE_ENV: development
      # NOTE: This MUST be unique for the CircleCI environment, otherwise messages might overlap on Firebase.
      HUB_ADDRESS: '0x24170308A71bc41d0dE9B7CEF74c0EeCc8033521'
      HUB_PRIVATE_KEY: '0x8bf18c8953c7b41aac4cc3351dc179cda6831fcca852cbf71e4b0a75daf464ae'

    steps:
      - checkout:
          path: /home/circleci/project
      - puppeteer/install
      - log_stats:
          file: integration-test-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: |
          sudo apt-get install postgresql-client
          (cd packages/hub && yarn db:migrate && yarn db:seed)
          cd /home/circleci/project
      - run:
          command: (cd packages/devtools && yarn run start:shared-ganache)
          background: true
      - run:
          command: (cd packages/wallet && yarn run wait-on ../../.ganache-deployments && yarn run start:integration)
          background: true
      - run:
          command: (cd packages/rps && yarn run wait-on ../../.ganache-deployments && yarn run start)
          background: true
      - run:
          command: (cd packages/hub && yarn run wait-on ../../.ganache-deployments && yarn run hub:start:dev)
          background: true
      - run: (cd packages/e2e-tests && yarn test)
      - upload_logs:
          file: integration-test-stats
      - notify_slack

workflows:
  statechannels:
    jobs:
      - prepare

      - build:
          requires:
            - prepare

      - test:
          requires:
            - prepare

      - integration-test:
          requires:
            - prepare

      - integration-test-with-hub:
          requires:
            - prepare
