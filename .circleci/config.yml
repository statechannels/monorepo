version: 2.1

orbs:
  docker: circleci/docker@1.0.1
  puppeteer: threetreeslight/puppeteer@0.1.2
  slack: circleci/slack@3.4.1

defaults: &defaults
  environment:
    NODE_ENV: test
    USE_NATIVE_SOLC: true
  working_directory: /home/circleci/project
  resource_class: medium
  docker:
    - image: counterfactual/statechannels:0.6.1 # Fast contract compilation with solc installed

save_dep: &save_dep
  save_cache:
    key: v3-dependency-cache-{{ checksum "yarn.lock" }}
    paths:
      - node_modules
restore_dep: &restore_dep
  restore_cache:
    key: v3-dependency-cache-{{ checksum "yarn.lock" }}

save_lib: &save_lib
  save_cache:
    # Force a new cache on each build
    key: v3-lib-cache-{{ epoch }}
    paths:
      - packages/nitro-protocol/lib
      - packages/rps/lib
      - packages/client-api-schema/lib
      - packages/e2e-tests/lib
      - packages/web3torrent/lib
      - packages/devtools/lib
      - packages/jest-gas-reporter/lib
      - packages/channel-provider/lib
      - packages/channel-client/lib
restore_lib: &restore_lib
  restore_cache:
    # Restore from the most recently cached version of lib, using a partial key match
    key: v3-lib-cache-

hub_deploy: &hub_deploy
  after_build:
    - run: heroku container:login
    - run: docker push registry.heroku.com/simple-hub-staging/simple-hub
    - run: heroku container:release -a simple-hub-staging simple-hub
  before_build:
    - attach_workspace:
        at: /home/circleci/project
    - run: curl https://cli-assets.heroku.com/install.sh | sh
    - run: cd packages/simple-hub && yarn build
  deploy: false
  dockerfile: packages/simple-hub/docker/simple-hub.dockerfile
  docker-password: HEROKU_API_KEY
  docker-username: HEROKU_USERNAME
  executor:
    image: circleci/node
    name: docker/docker
    tag: '10.16'
  image: simple-hub-staging/simple-hub
  name: hub_deploy
  registry: registry.heroku.com
  tag: latest
  use-remote-docker: true

commands:
  log_stats:
    description: 'Log stats '
    parameters:
      file:
        type: string
        default: stats
    steps:
      - run:
          command: bash bin/log_memory.sh <<parameters.file>>
          background: true

  upload_logs:
    description: 'Upload logs '
    parameters:
      file:
        type: string
        default: memory-usage.txt
    steps:
      - store_artifacts:
          path: /home/circleci/<< parameters.file >>.txt
          destination: << parameters.file >>

  upload_gas_report:
    description: 'Upload gas report '
    parameters:
      package:
        type: string
    steps:
      - store_artifacts:
          path: /home/circleci/project/packages/<< parameters.package >>/gas.json
          destination: << parameters.package >>-gas.json
      - store_artifacts:
          path: /home/circleci/project/packages/<< parameters.package >>/gas.md
          destination: << parameters.package >>-gas.md

  upload_e2e_screenshots:
    description: 'Upload e2e error screengrab '
    parameters:
      job:
        type: string
    steps:
      - store_artifacts:
          path: /home/circleci/project/packages/e2e-tests/e2e-wait.error.png
          destination: wait.error.png
      - store_artifacts:
          path: /home/circleci/project/packages/e2e-tests/e2e-click.error.png
          destination: click.error.png

  notify_slack:
    description: 'Notify slack '
    steps:
      - slack/status:
          failure_message: 'A $CIRCLE_JOB job has failed on master!'
          fail_only: true
          mentions: 'SRHGGRGS0' # Group ID for ActiveDevs
          only_for_branches: 'master'

jobs:
  prepare:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - log_stats:
          file: prepare-stats
      - <<: *restore_dep
      - <<: *restore_lib
      - run: yarn --frozen-lockfile
      - <<: *save_dep
      - <<: *save_lib

      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - packages/*/dist
            - packages/*/build
            - packages/*/lib
            - packages/*/node_modules
            - packages/client-api-schema/types
            - node_modules
      - upload_logs:
          file: prepare-stats
      - notify_slack

  build:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - log_stats:
          file: build-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: yarn lint:check
      - run:
          name: build
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]
            then
                yarn build:ci
            else
                yarn build:ci:incremental
            fi
      - upload_logs:
          file: build-stats
      - notify_slack

  test:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - log_stats:
          file: test-stats
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: test
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]
            then
              yarn test:ci
            else
              yarn test:ci:incremental
            fi
          no_output_timeout: 30m
      - upload_logs:
          file: test-stats
      - upload_gas_report:
          package: rps
      - upload_gas_report:
          package: nitro-protocol
      - notify_slack

  integration-test-rps:
    resource_class: medium
    working_directory: /home/circleci/project
    docker:
      - image: circleci/node:10.16.3-browsers
    environment:
      SC_ENV: circle-integration-rps
    steps:
      - checkout
      - puppeteer/install
      - log_stats:
          file: integration-test-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: (cd packages/e2e-tests && sh ./run-e2e.sh rps)
      - upload_logs:
          file: integration-test-stats
      - upload_e2e_screenshots:
          job: integration-test

  integration-test-web3torrent:
    resource_class: large
    working_directory: /home/circleci/project
    docker:
      - image: circleci/node:10.16.3-browsers
    environment:
      SC_ENV: circle-integration-w3t
    steps:
      - checkout
      - puppeteer/install
      - log_stats:
          file: integration-test-web3torrent-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: (cd packages/e2e-tests && sh ./run-e2e.sh web3torrent)
      - store_artifacts:
          path: /tmp/ganache.log
      - store_artifacts:
          path: /tmp/seed-download.pino.log
      - store_artifacts:
          path: /tmp/seed-download.browser.log
      - store_artifacts:
          path: /tmp/withdraw.pino.log
      - store_artifacts:
          path: /tmp/withdraw.browser.log
      - store_artifacts:
          path: packages/simple-hub/pino.log
      - upload_logs:
          file: integration-test-web3torrent-stats
      - upload_e2e_screenshots:
          job: integration-test-web3torrent

  integration-test-web3torrent-with-hub:
    resource_class: large
    working_directory: /home/circleci/project
    docker:
      - image: circleci/node:10.16.3-browsers
    environment:
      SC_ENV: circle-integration-w3t-with-hub
    steps:
      - checkout
      - puppeteer/install
      - log_stats:
          file: integration-test-web3torrent-with-hub-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: (cd packages/e2e-tests && sh ./run-e2e.sh web3torrent)
      - store_artifacts:
          path: /tmp/ganache.log
      - store_artifacts:
          path: /tmp/seed-download.pino.log
      - store_artifacts:
          path: /tmp/seed-download.browser.log
      - store_artifacts:
          path: /tmp/withdraw.pino.log
      - store_artifacts:
          path: /tmp/withdraw.browser.log
      - store_artifacts:
          path: packages/simple-hub/pino.log
      - upload_logs:
          file: integration-test-web3torrent-with-hub-stats
      - upload_e2e_screenshots:
          job: integration-test-with-hub

  release-incremental:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project
      - run: yarn build:netlify:incremental
      - run: yarn release:netlify:incremental
      - notify_slack

  release:
    <<: *defaults
    steps:
      - checkout
      - log_stats:
          file: netlify-stats
      - attach_workspace:
          at: /home/circleci/project
      - run: yarn build:netlify
      - run: yarn release:netlify
      - upload_logs:
          file: netlify-stats
      - notify_slack

  release-hub:
    environment:
      DOCKER_BUILDKIT: 1
    working_directory: /home/circleci/project
    resource_class: large
    docker:
      - image: circleci/node:10.16
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - checkout
      - attach_workspace:
          at: /home/circleci/project

      - <<: *restore_dep
      - <<: *restore_lib
      - run: yarn --frozen-lockfile
      - run: curl https://cli-assets.heroku.com/install.sh | sh
      - run: heroku container:login
      - docker/build:
          # cache_from: registry.heroku.com/simple-hub-staging/simple-hub:latest
          dockerfile: packages/simple-hub/docker/simple-hub.dockerfile
          extra_build_args: --build-arg BUILDKIT_INLINE_CACHE=1
          image: registry.heroku.com/simple-hub-staging/simple-hub
          tag: latest
      - docker/push:
          image: simple-hub-staging/simple-hub
          registry: registry.heroku.com
          tag: latest
      - run: heroku container:release -a simple-hub-staging simple-hub

workflows:
  statechannels:
    jobs:
      - prepare

      - build:
          requires:
            - prepare
      - test:
          requires:
            - prepare
      - integration-test-rps:
          requires:
            - prepare
      - integration-test-web3torrent:
          requires:
            - prepare
      - integration-test-web3torrent-with-hub:
          requires:
            - prepare
      - release-incremental:
          requires:
            - prepare
          filters:
            branches:
              ignore: master
      - release:
          requires:
            - prepare
          filters:
            branches:
              only: master
      - release-hub:
          filters:
            branches:
              # Switch back before creating PR
              only: simple-hub-release #deploy-web3torrent-xstate-wallet
